import Head from 'next/head';
import logoImg from '../assets/logo.svg';
import iconCheckImg from '../assets/icon-check.svg';

import appPreviewImg from '../assets/app-nlw-copa-preview.png';
import usersAvatarExampleImg from '../assets/users-avatar-example.png';

import Image from 'next/image';
import { FormEvent, useState, Fragment } from 'react';
import { api } from '../lib/axios';
import Modal from '../components/Modal';
import { Dialog } from '@headlessui/react';
import { Copy } from 'phosphor-react';

interface HomeProps {
  poolCount: number;
  guessCount: number;
  userCount: number;
}

export default function Home({ poolCount, guessCount, userCount }: HomeProps) {
  const [title, setTitle] = useState('');
  const [code, setCode] = useState('');
  const [isOpen, setIsOpen] = useState(false);

  function closeModal() {
    setIsOpen(false);
  }

  function openModal() {
    setIsOpen(true);
  }

  const createPool = async (event: FormEvent) => {
    event.preventDefault();

    try {
      const { data } = await api.post('/pools', { title });
      setCode(data.code);
      openModal();
      setTitle('');
    } catch (error) {
      console.error(error);
    }
  };

  return (
    <div className="max-w-[1124px] h-screen mx-auto grid grid-cols-2 items-center gap-28">
      <Head>
        <title>Nlw Copa</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="w-full">
        <Image quality={100} src={logoImg} alt="NLW Copa" />
        <h1 className="mt-14 text-white text-5xl font-bold leading-tight">
          Crie seu pr√≥prio bol√£o da copa e compartilhe entre amigos!
        </h1>

        <div className="mt-10 flex items-center gap-2">
          <Image quality={100} src={usersAvatarExampleImg} alt="NLW Copa" />
          <strong className="text-gray-100 text-xl">
            <span className="text-ignite-500">+{userCount}</span> pessoas j√°
            est√£o usando
          </strong>
        </div>

        <form className="mt-10 flex gap-2" onSubmit={createPool}>
          <input
            className="flex-1 px-6 py-4 rounded bg-gray-800 border border-gray-600 text-sm text-white"
            type="text"
            placeholder="Qual nome do seu bol√£o?"
            value={title}
            onChange={(event) => {
              setTitle(event.target.value);
            }}
          />
          <button
            className="bg-yellow-500 px-6 py-4 rounded font-bold text-gray-900 text-sm uppercase hover:bg-yellow-700"
            type="submit"
          >
            Criar meu bol√£o
          </button>
        </form>

        <p className="text-gray-300 mt-4 text-sm leading-relaxed">
          Ap√≥s criar seu bol√£o, voc√™ receber√° um c√≥digo √∫nico que poder√° usar
          para convidar outras pessoas üöÄ
        </p>

        <div className="mt-10 pt-10 border-t border-gray-600 flex justify-between  text-gray-100">
          <div className=" flex items-center gap-6">
            <Image quality={100} src={iconCheckImg} alt="Check" />
            <div className="flex flex-col">
              <span className="font-bold text-2xl">+{poolCount}</span>
              <span>Bol√µes criados </span>
            </div>
          </div>
          <div className="w-px h-14 bg-gray-600"></div>
          <div className=" flex items-center gap-6">
            <Image quality={100} src={iconCheckImg} alt="Check" />
            <div className="flex flex-col">
              <span className="font-bold text-2xl">+{guessCount}</span>
              <span>Palpites enviados</span>
            </div>
          </div>
        </div>
      </main>
      <Image
        quality={100}
        src={appPreviewImg}
        alt="Dois celulares exibindo uma pr√©vida da aplica√ß√£o mobile"
      />
      <Modal isOpen={isOpen} closeModal={closeModal}>
        <Dialog.Panel className="w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all">
          <Dialog.Title
            as="h3"
            className="text-lg font-medium leading-6 text-gray-900 flex gap-2 items-center justify-center"
          >
            <Image
              quality={100}
              src={iconCheckImg}
              width={24}
              height={24}
              alt="Check"
            />{' '}
            Bol√£o criado com sucesso
          </Dialog.Title>
          <div className="my-5 flex items-center justify-center gap-2">
            <p className="text-md  text-gray-900">
              O c√≥digo do seu bol√£o √©: {code}
            </p>
            <Copy
              size={24}
              weight="thin"
              className="cursor-pointer"
              onClick={() => navigator.clipboard.writeText(code)}
            />
          </div>

          <div className="mt-4 flex items-center justify-center">
            <button
              type="button"
              className="inline-flex justify-center rounded-md border border-transparent bg-red-100 px-4 py-2 text-sm font-medium text-gray-900 hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2"
              onClick={closeModal}
            >
              Fechar
            </button>
          </div>
        </Dialog.Panel>
      </Modal>
    </div>
  );
}

export const getStaticProps = async () => {
  const [poolCountResponse, guessCountResponse, userCountResponse] =
    await Promise.all([
      api.get('/pools/count'),
      api.get('/guesses/count'),
      api.get('/users/count'),
    ]);

  return {
    props: {
      poolCount: poolCountResponse.data.count,
      guessCount: guessCountResponse.data.count,
      userCount: userCountResponse.data.count,
    },
    revalidate: 60,
  };
};
